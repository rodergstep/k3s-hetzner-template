# Stage 1: Build the Django application and collect static files
FROM python:3.9-slim as builder

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

WORKDIR /app

COPY requirements.txt /app/
RUN pip install --no-cache-dir -r requirements.txt

COPY . /app/

# Run collectstatic (only if needed for the Django app itself, not for Nginx)
# If static files are only served by Nginx, this step might not be necessary in the Django app image.
# RUN python manage.py collectstatic --noinput

# Stage 2: Create the final Django application image
FROM python:3.9-slim

# Create a non-root user
RUN useradd --create-home --shell /bin/bash appuser

WORKDIR /home/appuser/app

# Copy the application code from the builder stage
COPY --from=builder /app /home/appuser/app

# Change ownership of the app directory
RUN chown -R appuser:appuser /home/appuser/app

# Switch to the non-root user
USER appuser

EXPOSE 8000

CMD ["gunicorn", "--bind", ":8000", "--workers", "3", "--graceful-timeout", "55", "your_project_name.wsgi:application"]